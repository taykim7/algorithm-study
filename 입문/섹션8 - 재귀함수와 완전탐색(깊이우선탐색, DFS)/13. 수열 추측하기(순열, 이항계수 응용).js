/* 
📝 수열 추측하기
가장 윗줄에 1부터 N까지의 숫자가 한 개씩 적혀 있다.
그리고 둘째 줄부터 차례대로 파스칼의 삼각형처럼 위의 두개를 더한 값이 저장되게 된다.
예를 들어 N이 4 이고 가장 윗 줄에 3 1 2 4 가 있다고 했을 때,
다음과 같은 삼각형이 그려진다.

3 1 2 4
 4 3 6
  7 9
   16

N과 가장 밑에 있는 숫자가 주어져 있을 때 가장 윗줄에 있는 숫자를 구하는 프로그램을 작성하시오.
단, 답이 여러가지가 나오는 경우에는 사전순으로 가장 앞에 오는 것을 출력하여야 한다.

▣입력설명
첫째 줄에 두개의 정수 N(1≤N≤10)과 F가 주어진다.
N은 가장 윗줄에 있는 숫자의 개수를 의미하며
F는 가장 밑에 줄에 있는 수로 1,000,000 이하이다.

▣출력설명
첫째 줄에 삼각형에서 가장 위에 들어갈 N개의 숫자를 빈 칸을 사이에 두고 출력한다.
답이 존재하지 않는 경우는 입력으로 주어지지 않는다.

▣입력예제 1                                   
4 16
▣출력예제 1
3 1 2 4

📝 강의 자료

n이 4면 1, 2, 3, 4 를 사용한다는 것인데...
굳이 1 2 3 4를 활용해서 하나하나 더해갈 필요가 없음
이렇게 계산하면 시간복잡도가 노답임

왜냐면 ..
1 2 3 4
1+2 2+3 3+4
1+2+2+3 2+3+3+4
1+2+2+2+3+3+3+4

최종적으로 ... 1개 3개 3개 1개 씩 곱해주고 더하면 된다.
1, 3, 3, 1이라는 것은
3C0 3C1 3C2 3C3
3개중 0개, 3개중 1개, 3개중 2개, 3개중 3개를 뽑는다는 것
n이 4니까 .. n-1C0 n-1C1 n-1C2 n-1C3
(근데 시발 이걸 어떻게 아냐고)

○ 콤비네이션 공식
nCr = n! / (r!( n-r)!)
nCr = n-1Cr-1 + n-1Cr

만약에 n이 5라면 ...
4C0 4C1 4C2 4C3 4C4
즉, 1 4 6 4 1 이라는데 .... 왜??

4 C 2 는 4! / (2!2!) 
1x2x3x4 / (1x2x1x2) 즉, 6

와 시발 진짜 존나 어렵네
이거 전 문제부터 다시 풀고와야겠따 ...

*/

function solution(n, f) { 

  //-------------------------------
  function DFS(n, r) {
  }
  //-------------------------------

  DFS(f);
  return result;
}

solution(4, 16);

