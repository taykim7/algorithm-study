/* 
📝 이진트리 순회(깊이우선탐색)
아래 그림과 같은 이진트리를 전위순회와 후위순회를 연습해보세요.

    1
  2   3
4  5 6  7

전위순회 출력 : 1 2 4 5 3 6 7
중위순회 출력 : 4 2 5 1 6 3 7
후위순회 출력 : 4 5 2 6 7 3 1

* 이진 트리의 기본 구조 : 부모 노드에서 왼쪽 자식, 오른쪽 자식
현재 위에 구조로는 왼쪽은 부모노드*2, 오른쪽은 부모노드*2+1

* 깊이 우선 탐색 : 루트에서 시작해서 왼쪽부터 파고 들어가는 것!!
끝까지 가면 뒤로가서 다른 길로 ... ( 1 -> 2 -> 4 -> *5 -> *3 ....)

* 전위 순회 : 부모부터 시작, ***왼쪽 깊이 파고 오른쪽
* 중위 순회 : 부모가 중간.. ***왼쪽 자식들이 다 출력되야 출력.
* 후위 순회 : 부모가 맨 마지막. ***왼쪽, 오른쪽 다 출력하고 부모가 출력



📝 강의 자료
function solution(n){
  let answer="";
  function DFS(v){
    if(v>7) return;
    else{
      answer+=(v+' ');
      DFS(v*2);
      DFS(v*2+1);
    }
  }
  DFS(n);
  return answer;
}
console.log(solution(1));
*/

// (1) 살짝 베껴서 풀었따
function solution(n) {  
  function DFS(k) {
    // 종료
    if (7 < k) return;

    console.log('전위순회 ' + k);
    // *** 왼쪽 자식
    DFS(k * 2);
    
    // *** 오른쪽 자식
    DFS(k*2+1);
    console.log('후위순회 ' + k);
  }
  DFS(n);
  return result;
}
solution(1)


// 1 호출 및 대기
//   2 호출 및 대기
//     4 호출 및 대기
//       (8 호출 및 종료)
//     4 복귀
//     (9 호출 및 종료)
//   2 복귀
//   5 호출 및 대기
//     (10 호출 및 종료)
//   5 복귀
//   (11 호출 및 종료)
// 1 복귀
// 3 호출 및 대기
//   6 호출 및 대기
//     (12 호출 및 종료)
//   6 복귀
//   (13 호출 및 종료)
// 3 복귀
// 7 호출 및 대기
//   (14 호출 및 종료)
// 7 복귀
// (15 호출 및 종료)

// 솔직히 순회라는 느낌이 잘 안든다 ...
// 전위 순회는 왼쪽 출력에 집중
// 후위 순회는 왼쪽 오른쪽 다 출력해야함
